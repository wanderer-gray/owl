{"version":3,"sources":["init/api/store.js","init/api/view.js","init/api/index.js","init/notify/store.js","init/notify/view.js","init/notify/index.js","init/auth/store.js","init/auth/login/store.js","init/auth/login/view.js","init/auth/login/index.js","init/auth/restore/store.js","init/auth/restore/view.js","init/auth/restore/index.js","init/auth/signup/store.js","init/auth/signup/view.js","init/auth/signup/index.js","init/auth/view.js","init/auth/index.js","init/search/index.js","app/header/search/view.js","app/header/search/index.js","app/header/account/store.js","app/header/account/view.js","app/header/account/index.js","app/header/index.js","enums/actions.js","enums/objects.js","enums/system.js","utils/index.js","app/body/aside/view.js","app/body/aside/index.js","app/body/pages/tests/index.js","app/body/pages/profile/store.js","app/body/pages/profile/view.js","app/body/pages/profile/index.js","app/body/pages/contacts/store.js","app/body/pages/contacts/view.js","app/body/pages/contacts/index.js","app/body/pages/groups/store.js","app/body/pages/groups/group/contacts/index.js","app/body/pages/groups/group/edit.js","app/body/pages/groups/group/view.js","app/body/pages/groups/group/create.js","app/body/pages/groups/view.js","app/body/pages/groups/index.js","app/body/pages/roles/store.js","app/body/pages/roles/role/permissions/index.js","app/body/pages/roles/role/edit.js","app/body/pages/roles/role/view.js","app/body/pages/roles/role/create.js","app/body/pages/roles/view.js","app/body/pages/roles/index.js","app/body/pages/users/store.js","app/body/pages/users/user/roles/index.js","app/body/pages/users/user/edit.js","app/body/pages/users/user/view.js","app/body/pages/users/user/create.js","app/body/pages/users/view.js","app/body/pages/users/index.js","app/body/pages/system/store.js","app/body/pages/system/accounts/store.js","app/body/pages/system/accounts/account/edit.js","app/body/pages/system/accounts/account/view.js","app/body/pages/system/accounts/account/create.js","app/body/pages/system/accounts/view.js","app/body/pages/system/accounts/index.js","app/body/pages/system/conditions/store.js","app/body/pages/system/conditions/condition/edit.js","app/body/pages/system/conditions/condition/view.js","app/body/pages/system/conditions/condition/create.js","app/body/pages/system/conditions/view.js","app/body/pages/system/conditions/index.js","app/body/pages/system/view.js","app/body/pages/system/index.js","app/body/pages/index.js","app/body/index.js","app/index.js","init/index.js","index.js"],"names":["ApiException","status","message","this","ApiStore","url","_url","_method","_query","_body","m","q","b","a","URL","window","location","origin","search","URLSearchParams","toString","fetch","headers","method","body","JSON","stringify","undefined","response","ok","statusText","types","get","indexOf","json","errorHandler","done","err","Promise","resolve","reject","executor","then","result","next","catch","error","getApi","ApiView","props","api","children","Component","Api","NotifyStore","notifications","push","note","clear","makeAutoObservable","notify","NotifyView","autorun","length","forEach","options","enqueueSnackbar","withSnackbar","observer","Notify","notifyStore","autoHideDuration","AuthStore","isAuth","permissions","open","type","apiErrorHandler","onLogIn","init","checkIsAuth","getPermissions","setOpen","setType","close","onLogOut","LogInStore","email","password","setEmail","setPassword","LogIn","variant","useStyles","makeStyles","input","marginBottom","button","marginTop","LogInView","classes","TextField","className","fullWidth","label","value","onChange","event","target","Button","onClick","logInStore","RestoreStore","step","code","setStep","setCode","sendRestoreCode","query","Restore","theme","RestoreView","disabled","restoreStore","SignUpStore","sendSignUpCode","SignUp","SignUpView","signUpStore","root","position","top","left","width","height","display","alignItems","justifyContent","container","head","foot","link","color","textDecoration","textTransform","fontFamily","AuthViewBody","AuthViewFoot","Link","AuthView","Typography","to","inject","Auth","authStore","SearchStore","view","placeholder","onValueChange","setView","setPlaceholder","setValue","datetime","Date","now","setOnValueChange","backgroundColor","fade","palette","common","white","borderRadius","shape","breakpoints","up","searchIcon","padding","spacing","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchView","InputBase","AccountStore","anchorEl","onOpen","currentTarget","onClose","grow","flexGrow","AccountView","store","IconButton","edge","aria-label","aria-haspopup","AccountCircle","Menu","keepMounted","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","Store","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","logo","marginRight","logoLink","Header","AppBar","Toolbar","CREATE","UPDATE","DELETE","SELECT","getTitle","action","SYSTEM","PERMISSIONS","ROLES","USERS","GROUPS","TESTS","object","EMAIL_СONDITION_WHITE","EMAIL_СONDITION_BLACK","checkPermissions","actions","some","permission","aside","overflowX","toolbar","mixins","Item","Icon","ListItem","ListItemIcon","View","hideItems","objects","key","RolesIcon","UsersIcon","SystemIcon","Drawer","paper","List","TestIcon","ProfileIcon","ContactsIcon","GroupsIcon","Divider","map","Aside","MainPage","ProfileStore","profile","newPassword","setProfile","setNewPassword","getProfile","updateLink","updatePassword","oldPassword","deleteAccount","ProfileView","id","Table","TableBody","TableRow","TableCell","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Profile","ContactsStore","contacts","count","setResult","setLink","searchContacts","updateContacts","createContact","deleteContact","ContactsView","Paper","size","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","Contacts","GroupsStore","groups","searchGroups","title","refresh","deleteGroup","GroupStore","noContactIds","dispose","disposer","contactIds","GroupEditStore","addContact","contact","toJS","setContacts","removeContact","contactId","filter","onSave","makeObservable","observable","computed","bind","group","setGroup","setTitle","defaultGroup","GroupCreateStore","Autocomplete","getOptionLabel","option","getOptionSelected","renderInput","params","_","reason","onInputChange","GroupView","scroll","dividers","GroupsView","Groups","RolesStore","roles","searchRoles","name","deleteRole","RoleStore","_permissions","setPermissions","noPermissionIds","includes","permissionIds","RoleEditStore","addPermission","setPermissionIds","removePermission","permissionId","PermissionsStore","role","setRole","setName","RoleCreateStore","PermissionsView","InputLabel","htmlFor","Select","multiple","RoleView","RolesView","Roles","UsersStore","users","searchUsers","deleteUser","UserStore","noRoleIds","roleIds","UserEditStore","disabledFields","addRole","setRoles","removeRole","roleId","user","setUser","defaultUser","UserCreateStore","UserView","UsersView","Users","SystemStore","tabIndex","setTabIndex","onTabIndexChange","AccountsStore","accounts","setAccounts","getAccounts","AccountEditStore","host","port","secure","pass","account","setAccount","setHost","setPort","Number","isInteger","setSecure","setPass","defaultAccount","AccountCreateStore","FormControlLabel","labelPlacement","control","Switch","checked","AccountsView","Conditions","accountEdit","accountCreate","ConditionsStore","conditions","setConditions","getConditions","deleteCondition","ConditionEditStore","condition","data","setData","setCondition","system","defaultCondition","ConditionCreateStore","ConditionView","ConditionStore","ConditionsView","conditionData","conditionEdit","conditionCreate","tabs","Content","SystemView","Tabs","centered","textColor","indicatorColor","Tab","Box","System","pages","AppRouter","path","exact","component","Tests","Body","CssBaseline","Init","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd1a554f.chunk.js","sourcesContent":["function ApiException(status, message) {\n  this.status = status;\n  this.message = message;\n}\n\nclass ApiStore {\n  static errorHandler = null;\n\n  constructor(url) {\n    this._url = url;\n    this._method = 'get';\n    this._query = {};\n    this._body = {};\n  }\n\n  method(m) {\n    this._method = m;\n\n    return this;\n  }\n\n  query(q) {\n    this._query = q;\n\n    return this;\n  }\n\n  body(b) {\n    this._body = b;\n\n    return this;\n  }\n\n  async executor() {\n    const {\n      _url,\n      _method,\n      _query,\n      _body\n    } = this;\n    const url = new URL(`/api/${_url}`, window.location.origin);\n    url.search = new URLSearchParams(_query).toString();\n\n    try {\n      const response = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        },\n        method: _method,\n        body: _method !== 'get' && _method !== 'head' ? JSON.stringify(_body) : undefined\n      });\n\n      if (!response.ok) {\n        throw new ApiException(response.status, response.statusText);\n      }\n\n      const types = response.headers.get('Content-Type');\n\n      if (!types || types.indexOf('application/json') === -1) {\n        return;\n      }\n\n      const json = await response.json();\n      \n      return json;\n    } catch (error) {\n      if (ApiStore.errorHandler) {\n        ApiStore.errorHandler(error);\n      }\n      \n      throw error;\n    }\n  }\n\n  then(done, err) {\n    return new Promise((resolve, reject) => {\n      this.executor()\n        .then((result) => {\n          const next = done(result);\n\n          if (!next) {\n            resolve(Promise.resolve());\n          } else {\n            resolve(next);\n          }\n        })\n        .catch((error) => {\n          if (err) {\n            resolve(err(error));\n          } else {\n            reject(error);\n          }\n        });\n    });\n  }\n\n  catch(err) {\n    return new Promise((resolve) => {\n      this.executor()\n        .then(() => {\n          resolve(Promise.resolve());\n        })\n        .catch((error) => {\n          const next = err(error);\n\n          if (!next) {\n            resolve(Promise.resolve());\n          } else {\n            resolve(next);\n          }\n        });\n    });\n  }\n}\n\nexport default ApiStore;\n","import { Component } from 'react';\nimport ApiStore from './store';\n\nconst getApi = (url) => {\n  return new ApiStore(url);\n}\n\nclass ApiView extends Component {\n  constructor(props) {\n    super(props);\n\n    window.api = getApi;\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return children;\n  }\n}\n\nexport default ApiView;","import ApiView from './view';\n\nconst Api = ({ children }) => {\n\n  return (\n    <ApiView>\n      {children}\n    </ApiView>\n  );\n};\n\nexport default Api;\n","import { makeAutoObservable } from 'mobx';\n\nclass NotifyStore {\n  notifications = [];\n\n  constructor() {\n    makeAutoObservable(this);\n\n    window.notify = this.push;\n  }\n\n  push = (note) => {\n    this.notifications.push(note);\n  };\n\n  clear = () => {\n    this.notifications = [];\n  }\n}\n\nexport default NotifyStore;\n","import { Component } from 'react';\nimport { autorun } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { withSnackbar } from 'notistack';\n\nclass NotifyView extends Component {\n  componentDidMount() {\n    autorun(() => {\n      const { notifications, clear } = this.props.NotifyStore;\n\n      if (!notifications.length) {\n        return;\n      }\n\n      notifications.forEach(({ message, ...options }) => {\n        this.props.enqueueSnackbar(message, options);\n      });\n\n      clear();\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return children;\n  }\n}\n\nexport default withSnackbar(observer(NotifyView));\n","import { SnackbarProvider } from 'notistack';\nimport NotifyStore from './store';\nimport NotifyView from './view';\n\nconst Notify = ({ children }) => {\n  const notifyStore = new NotifyStore();\n\n  return (\n    <SnackbarProvider autoHideDuration={3000}>\n      <NotifyView NotifyStore={notifyStore} >\n        {children}\n      </NotifyView>\n    </SnackbarProvider>\n  );\n};\n\nexport default Notify;\n","import { makeAutoObservable } from 'mobx';\nimport ApiStore from '../api/store';\n\nclass AuthStore {\n  isAuth = false;\n  permissions = [];\n\n  open = false;\n  type = 'login';\n\n  constructor() {\n    makeAutoObservable(this);\n\n    ApiStore.errorHandler = this.apiErrorHandler;\n\n    this.init();\n  }\n\n  apiErrorHandler = (error) => {\n    if (!error || !error.status || error.status !== 401) {\n      return;\n    }\n\n    this.onLogIn();\n  }\n\n  init = () => {\n    this.checkIsAuth();\n    this.getPermissions();\n  }\n\n  checkIsAuth = async() => {\n    try {\n      this.isAuth = await api('auth/isAuth');\n    } catch {\n      this.isAuth = false;\n    }\n  }\n\n  getPermissions = async() => {\n    try {\n      this.permissions = await api('auth/getPermissions');\n    } catch {\n      this.permissions = [];\n    }\n  }\n\n  setOpen = (open) => {\n    this.open = open;\n  }\n\n  setType = (type) => {\n    this.type = type;\n  }\n\n  close = () => {\n    this.setOpen(false)\n\n    this.init();\n  }\n\n  onLogIn = () => {\n    this.setOpen(true)\n    this.setType('login');\n  }\n\n  onLogOut = async() => {\n    try {\n      await api('auth/logout')\n        .method('delete');\n    } catch {\n      // pass\n    }\n    \n    window.location = '/';\n  }\n}\n\nexport default AuthStore;\n","import { makeAutoObservable } from 'mobx';\n\nclass LogInStore {\n  email = '';\n  password = '';\n\n  constructor(AuthStore) {\n    makeAutoObservable(this);\n\n    this.AuthStore = AuthStore;\n  }\n\n  setEmail = (email) => {\n    this.email = email;\n  }\n\n  setPassword = (password) => {\n    this.password = password;\n  }\n\n  close = () => {\n    this.AuthStore.close();\n  }\n\n  LogIn = async() => {\n    const {\n      email,\n      password\n    } = this;\n\n    try {\n      await api('auth/login')\n        .method('post')\n        .body({\n          email,\n          password\n        });\n      \n      this.close();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось войти в систему'\n      });\n    }\n  }\n}\n\nexport default LogInStore;\n","import { observer } from 'mobx-react';\nimport {\n  TextField,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    marginBottom: '8px'\n  },\n  button: {\n    marginTop: '8px'\n  }\n}));\n\nconst LogInView = observer(({ LogInStore }) => {\n  const classes = useStyles();\n  \n  const {\n    email,\n    password,\n    setEmail,\n    setPassword,\n    LogIn\n  } = LogInStore;\n\n  return (\n    <>\n      <TextField\n        className={classes.input}\n        type={'email'}\n        variant={'outlined'}\n        fullWidth={true}\n        label={'Email'}\n        value={email}\n        onChange={(event) => setEmail(event.target.value)}\n      />\n      <TextField\n        className={classes.input}\n        type={'password'}\n        variant={'outlined'}\n        fullWidth={true}\n        label={'Password'}\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n      />\n\n      <Button\n        className={classes.button}\n        variant={'outlined'}\n        fullWidth={true}\n        onClick={LogIn}\n      >\n        Войти\n      </Button>\n    </>\n  );\n});\n\nexport default LogInView;\n","import LogInStore from './store';\nimport LogInView from './view';\n\nconst LogIn = ({ AuthStore }) => {\n  const logInStore = new LogInStore(AuthStore);\n\n  return <LogInView LogInStore={logInStore} />;\n};\n\nexport default LogIn;\n","import { makeAutoObservable } from 'mobx';\n\nclass RestoreStore {\n  step = 1;\n  email = '';\n  code = '';\n  password = '';\n\n  constructor(AuthStore) {\n    makeAutoObservable(this);\n\n    this.AuthStore = AuthStore;\n  }\n\n  setStep = (step) => {\n    this.step = step;\n  }\n\n  setEmail = (email) => {\n    this.email = email;\n  }\n\n  setCode = (code) => {\n    this.code = code;\n  }\n\n  setPassword = (password) => {\n    this.password = password;\n  }\n\n  close = () => {\n    this.AuthStore.close();\n  }\n\n  sendRestoreCode = async() => {\n    const { email } = this;\n\n    try {\n      await api('auth/sendRestoreCode')\n        .method('post')\n        .query({ email });\n      \n      this.setStep(2);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось отправить код'\n      });\n    }\n  }\n\n  Restore = async() => {\n    const {\n      email,\n      code,\n      password\n    } = this;\n\n    try {\n      await api('auth/restore')\n        .method('post')\n        .body({\n          email,\n          code,\n          password\n        });\n      \n      this.close();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось восстановить аккаунт'\n      });\n    }\n  }\n}\n\nexport default RestoreStore;\n","import { observer } from 'mobx-react';\nimport {\n  TextField,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    marginBottom: '8px'\n  },\n  button: {\n    marginTop: '8px'\n  }\n}));\n\nconst RestoreView = observer(({ RestoreStore }) => {\n  const classes = useStyles();\n  \n  const {\n    step,\n    email,\n    code,\n    password,\n    setEmail,\n    setCode,\n    setPassword,\n    sendRestoreCode,\n    Restore\n  } = RestoreStore;\n\n  return (\n    <>\n      <TextField\n        className={classes.input}\n        disabled={step !== 1}\n        type={'email'}\n        variant={'outlined'}\n        fullWidth={true}\n        label={'Email'}\n        value={email}\n        onChange={(event) => setEmail(event.target.value)}\n      />\n\n      { step === 1 ? (\n        <Button\n          className={classes.button}\n          variant={'outlined'}\n          fullWidth={true}\n          onClick={sendRestoreCode}\n        >\n          Получить код\n        </Button>\n      ) : null}\n\n      { step === 2 ? (\n        <>\n          <TextField\n            className={classes.input}\n            variant={'outlined'}\n            fullWidth={true}\n            label={'Code'}\n            value={code}\n            onChange={(event) => setCode(event.target.value)}\n          />\n          <TextField\n            className={classes.input}\n            variant={'outlined'}\n            fullWidth={true}\n            label={'Password'}\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n\n          <Button\n            className={classes.button}\n            variant={'outlined'}\n            fullWidth={true}\n            onClick={Restore}\n          >\n            Сохранить\n          </Button>\n        </>\n      ) : null}\n    </>\n  );\n});\n\nexport default RestoreView;\n","import RestoreStore from './store';\nimport RestoreView from './view';\n\nconst Restore = ({ AuthStore }) => {\n  const restoreStore = new RestoreStore(AuthStore);\n\n  return <RestoreView RestoreStore={restoreStore} />;\n};\n\nexport default Restore;\n","import { makeAutoObservable } from 'mobx';\n\nclass SignUpStore {\n  step = 1;\n  email = '';\n  code = '';\n  password = '';\n\n  constructor(AuthStore) {\n    makeAutoObservable(this);\n\n    this.AuthStore = AuthStore;\n  }\n\n  setStep = (step) => {\n    this.step = step;\n  }\n\n  setEmail = (email) => {\n    this.email = email;\n  }\n\n  setCode = (code) => {\n    this.code = code;\n  }\n\n  setPassword = (password) => {\n    this.password = password;\n  }\n\n  close = () => {\n    this.AuthStore.close();\n  }\n\n  sendSignUpCode = async() => {\n    const {\n      email\n    } = this;\n\n    try {\n      await api('auth/sendSignUpCode')\n        .method('post')\n        .query({ email });\n\n      this.setStep(2);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось отправить код'\n      });\n    }\n  }\n\n  SignUp = async() => {\n    const {\n      email,\n      code,\n      password\n    } = this;\n\n    try {\n      await api('auth/signup')\n        .method('post')\n        .body({\n          email,\n          code,\n          password\n        });\n      \n      this.close();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось завершить регистрацию'\n      });\n    }\n  }\n}\n\nexport default SignUpStore;\n","import { observer } from 'mobx-react';\nimport {\n  TextField,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    marginBottom: '8px'\n  },\n  button: {\n    marginTop: '8px'\n  }\n}));\n\nconst SignUpView = observer(({ SignUpStore }) => {\n  const classes = useStyles();\n  \n  const {\n    step,\n    email,\n    code,\n    password,\n    setEmail,\n    setCode,\n    setPassword,\n    sendSignUpCode,\n    SignUp\n  } = SignUpStore;\n\n  return (\n    <>\n      <TextField\n        className={classes.input}\n        disabled={step !== 1}\n        type={'email'}\n        variant={'outlined'}\n        fullWidth={true}\n        label={'Email'}\n        value={email}\n        onChange={(event) => setEmail(event.target.value)}\n      />\n\n      { step === 1 ? (\n        <Button\n          className={classes.button}\n          variant={'outlined'}\n          fullWidth={true}\n          onClick={sendSignUpCode}\n        >\n          Получить код\n        </Button>\n      ) : null}\n\n      { step === 2 ? (\n        <>\n          <TextField\n            className={classes.input}\n            variant={'outlined'}\n            fullWidth={true}\n            label={'Code'}\n            value={code}\n            onChange={(event) => setCode(event.target.value)}\n          />\n          <TextField\n            className={classes.input}\n            variant={'outlined'}\n            fullWidth={true}\n            label={'Password'}\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n\n          <Button\n            className={classes.button}\n            variant={'outlined'}\n            fullWidth={true}\n            onClick={SignUp}\n          >\n            Зарегистрироваться\n          </Button>\n        </>\n      ) : null}\n    </>\n  );\n});\n\nexport default SignUpView;\n","import SignUpStore from './store';\nimport SignUpView from './view';\n\nconst SignUp = ({ AuthStore }) => {\n  const signUpStore = new SignUpStore(AuthStore);\n\n  return <SignUpView SignUpStore={signUpStore} />;\n};\n\nexport default SignUp;\n","import {\r\n  inject,\r\n  observer,\r\n} from 'mobx-react';\r\nimport { Link as ReactLink } from 'react-router-dom';\r\nimport {\r\n  Typography,\r\n  Link,\r\n} from '@material-ui/core';\r\nimport LogIn from './login';\r\nimport Restore from './restore';\r\nimport SignUp from './signup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  container: {\r\n    width: '350px'\r\n  },\r\n  head: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  body: {\r\n    marginTop: '16px'\r\n  },\r\n  foot: {\r\n    marginTop: '16px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  link: {\r\n    color: '#000',\r\n    textDecoration: 'none',\r\n    textTransform: 'uppercase',\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\r\n  },\r\n}));\r\n\r\nconst AuthViewBody = observer(({ AuthStore }) => {\r\n  const { type } = AuthStore;\r\n\r\n  switch(type) {\r\n    case 'login':\r\n      return <LogIn AuthStore={AuthStore} />;\r\n    \r\n    case 'restore':\r\n      return <Restore AuthStore={AuthStore} />;\r\n    \r\n    case 'signup':\r\n      return <SignUp AuthStore={AuthStore} />;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst AuthViewFoot = observer(({ AuthStore }) => {\r\n  const {\r\n    type,\r\n    setType\r\n  } = AuthStore;\r\n\r\n  switch(type) {\r\n    case 'login':\r\n      return (\r\n        <>\r\n          <Link onClick={() => setType('signup')}>\r\n            Регистрация\r\n          </Link>\r\n          \r\n          <Link\r\n            color={'inherit'}\r\n            onClick={() => setType('restore')}\r\n          >\r\n            Забыли пароль?\r\n          </Link>\r\n        </>\r\n      );\r\n    \r\n    case 'restore':\r\n      return (\r\n        <>\r\n          <Link onClick={() => setType('login')}>\r\n            Войти в систему\r\n          </Link>\r\n\r\n          <Link\r\n            color={'inherit'}\r\n            onClick={() => setType('signup')}\r\n          >\r\n            Регистрация\r\n          </Link>\r\n        </>\r\n      );\r\n    \r\n    case 'signup':\r\n      return (\r\n        <>\r\n          <Link onClick={() => setType('login')}>\r\n            Войти в систему\r\n          </Link>\r\n\r\n          <Link\r\n            color={'inherit'}\r\n            onClick={() => setType('restore')}\r\n          >\r\n            Забыли пароль?\r\n          </Link>\r\n        </>\r\n      );\r\n\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst AuthView = observer(({ AuthStore, children }) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    open,\r\n    close\r\n  } = AuthStore;\r\n\r\n  if (!open) {\r\n    return children;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.container}> \r\n        <div className={classes.head}>\r\n          <Typography variant={'h6'}>\r\n            Сова\r\n          </Typography>\r\n\r\n          <ReactLink\r\n            className={classes.link}\r\n            to={'/'}\r\n            onClick={close}\r\n          >\r\n            Закрыть\r\n          </ReactLink>\r\n        </div>\r\n\r\n        <div className={classes.body}>\r\n          {<AuthViewBody AuthStore={AuthStore} />}\r\n        </div>\r\n\r\n        <div className={classes.foot}>\r\n          {<AuthViewFoot AuthStore={AuthStore} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default inject(\r\n  ({ AuthStore }) => { \r\n    return {\r\n      AuthStore\r\n    };\r\n  }\r\n)(AuthView);\r\n","import { Provider } from 'mobx-react';\r\nimport AuthStore from './store';\r\nimport AuthView from './view';\r\n\r\n\r\nconst Auth = ({ children }) => {\r\n  const authStore = new AuthStore();\r\n  \r\n  return (\r\n    <Provider AuthStore={authStore}>\r\n      <AuthView>\r\n        {children}\r\n      </AuthView>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { makeAutoObservable } from 'mobx';\n\nclass SearchStore {\n  view = false;\n  placeholder = '';\n  value = '';\n  onValueChange = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setView = (view) => {\n    this.view = view;\n  }\n\n  setPlaceholder = (placeholder) => {\n    this.placeholder = placeholder;\n  }\n\n  setValue = (value) => {\n    this.value = value;\n  }\n\n  onChange = (event) => {\n    const value = event.target.value;\n    const datetime = Date.now();\n    const { onValueChange } = this;\n\n    this.setValue(value);\n    onValueChange && onValueChange(value, datetime);\n  }\n\n  setOnValueChange = (onValueChange) => {\n    this.onValueChange = onValueChange;\n  }\n\n  clear = () => {\n    this.setView(false);\n    this.setPlaceholder('');\n    this.setValue('');\n    this.setOnValueChange(null);\n  }\n}\n\nexport default SearchStore;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { InputBase } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    width: '100%',\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    borderRadius: theme.shape.borderRadius,\n    [theme.breakpoints.up('sm')]: {\n      width: '350px',\n    },\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n  },\n  searchIcon: {\n    position: 'absolute',\n    height: '100%',\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    pointerEvents: 'none',\n  },\n  inputRoot: {\n    width: '100%',\n    color: 'inherit',\n  },\n  inputInput: {\n    width: '100%',\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n  },\n}));\n\nconst SearchView = observer(({ SearchStore }) => {\n  const classes = useStyles();\n\n  const {\n    view,\n    placeholder,\n    value,\n    onChange,\n  } = SearchStore;\n\n  if (!view) {\n    return null;\n  } \n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n\n      <InputBase\n        placeholder={placeholder}\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n});\n\nexport default SearchView;\n","import React from 'react';\nimport { inject } from 'mobx-react';\nimport View from './view';\n\nconst Search = ({ SearchStore }) => <View SearchStore={SearchStore} />;\n\nexport default inject(({ SearchStore }) => {\n  return {\n    SearchStore,\n  };\n})(Search);\n","import { makeAutoObservable } from 'mobx';\n\nclass AccountStore {\n  anchorEl = null;\n\n  get isAuth() {\n    return this.AuthStore.isAuth;\n  }\n\n  constructor({ AuthStore }) {\n    this.AuthStore = AuthStore;\n\n    makeAutoObservable(this);\n  }\n\n  onOpen = (event) => {\n    this.anchorEl = event.currentTarget;\n  }\n\n  onClose = () => {\n    this.anchorEl = null;\n  }\n\n  onLogIn = () => {\n    this.AuthStore.onLogIn();\n  }\n\n  onLogOut = () => {\n    this.AuthStore.onLogOut();\n  }\n}\n\nexport default AccountStore;\n","import React, { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { Link } from 'react-router-dom';\nimport {\n  IconButton,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  grow: {\n    flexGrow: 1,\n  },\n  root: {\n    display: 'flex',\n  },\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n}));\n\nconst AccountView = observer(({ store }) => {\n  const classes = useStyles();\n\n  const {\n    anchorEl,\n    isAuth,\n    onOpen,\n    onClose,\n    onLogIn,\n    onLogOut\n  } = store;\n\n  return (\n    <Fragment>\n      <div className={classes.grow} />\n      <div className={classes.root}>\n        <IconButton\n          edge={'end'}\n          color={'inherit'}\n          aria-label={'Аккаунт текущего пользователя'}\n          aria-haspopup={true}\n          onClick={onOpen}\n        >\n          <AccountCircle />\n        </IconButton>\n\n        <Menu\n          keepMounted={true}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n          open={!!anchorEl}\n          anchorEl={anchorEl}\n          onClose={onClose}\n        >\n          {isAuth ? (\n            <MenuItem>\n              <Link\n                to={'/profile'}\n                className={classes.link}\n              >\n                Профиль\n              </Link>\n            </MenuItem>\n          ) : null}\n          {!isAuth ? (\n            <MenuItem onClick={onLogIn}>Войти в систему</MenuItem>\n          ) : (\n            <MenuItem onClick={onLogOut}>Выйти из системы</MenuItem>\n          )}\n        </Menu>\n      </div>\n    </Fragment>\n  );\n});\n\nexport default AccountView;\n","import React from 'react';\nimport { inject } from 'mobx-react';\nimport Store from './store';\nimport View from './view';\n\nconst Account = ({ AuthStore }) => {\n  const store = new Store({ AuthStore });\n\n  return <View store={store} />;\n};\n\nexport default inject(({ AuthStore }) => {\n  return {\n    AuthStore,\n  };\n})(Account);\n","import { Link } from 'react-router-dom'; \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n}from '@material-ui/core';\r\nimport Search from './search';\r\nimport Account from './account';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  logo: {\r\n    marginRight: '12px',\r\n  },\r\n  logoLink: {\r\n    textDecoration: 'none',\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      position={'fixed'}\r\n      className={classes.appBar}\r\n    >\r\n      <Toolbar>\r\n        <Typography\r\n          className={classes.logo}\r\n          variant={'h6'}\r\n        >\r\n          <Link\r\n            className={classes.logoLink}\r\n            to={'/'}\r\n          >\r\n            Сова\r\n          </Link>\r\n        </Typography>\r\n\r\n        <Search />\r\n\r\n        <Account />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const CREATE = 1;\nconst UPDATE = 2;\nconst DELETE = 3;\nconst SELECT = 4;\n\nconst getTitle = (action) => {\n  switch (action) {\n    case CREATE:\n      return 'CREATE';\n\n    case UPDATE:\n      return 'UPDATE';\n\n    case DELETE:\n      return 'DELETE';\n\n    case SELECT:\n      return 'SELECT';\n\n    default:\n      return null;\n  }\n};\n\nexport {\n  CREATE,\n  UPDATE,\n  DELETE,\n  SELECT,\n  getTitle,\n};\n","const SYSTEM = 0;\nconst PERMISSIONS = 1;\nconst ROLES = 2;\nconst USERS = 3;\nconst GROUPS = 4;\nconst TESTS = 5;\n\nconst getTitle = (object) => {\n  switch (object) {\n    case SYSTEM:\n      return 'SYSTEM';\n    \n    case PERMISSIONS:\n      return 'PERMISSIONS';\n    \n    case ROLES:\n      return 'ROLES';\n    \n    case USERS:\n      return 'USERS';\n    \n    case GROUPS:\n      return 'GROUPS';\n    \n    case TESTS:\n      return 'TESTS';\n\n    default:\n      return null;\n  }\n};\n\nexport {\n  SYSTEM,\n  PERMISSIONS,\n  ROLES,\n  USERS,\n  GROUPS,\n  TESTS,\n  getTitle,\n};\n","const EMAIL_СONDITION_WHITE = 'white';\nconst EMAIL_СONDITION_BLACK = 'black';\n\nexport {\n  EMAIL_СONDITION_WHITE,\n  EMAIL_СONDITION_BLACK,\n};\n","import { actions } from '../enums';\n\nconst checkPermissions = (permissions, object, action = actions.SELECT) => permissions.some(\n  (permission) => permission.object === object && permission.action === action\n);\n\nexport {\n  checkPermissions,\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  inject,\n  observer,\n} from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Drawer,\n  List,\n  ListItem,\n  ListItemIcon,\n  Divider,\n}from '@material-ui/core';\nimport TestIcon from '@material-ui/icons/Assignment';\nimport ProfileIcon from '@material-ui/icons/AccountBox';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport GroupsIcon from '@material-ui/icons/Group';\nimport UsersIcon from '@material-ui/icons/People';\nimport SystemIcon from '@material-ui/icons/Settings';\nimport RolesIcon from '@material-ui/icons/Security';\nimport { objects } from '../../../enums';\nimport { checkPermissions } from '../../../utils';\n\nconst useStyles = makeStyles((theme) => ({\n  aside: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n}));\n\nconst Item = ({ Icon, to }) => (\n  <ListItem button={true}>\n    <Link to={to}>\n      <ListItemIcon>\n        <Icon />\n      </ListItemIcon>\n    </Link>\n  </ListItem>\n);\n\nconst View = observer(({ AuthStore }) => {\n  const classes = useStyles();\n\n  const { permissions } = AuthStore;\n\n  const hideItems = [];\n\n  checkPermissions(permissions, objects.ROLES) && hideItems.push({\n    key: objects.ROLES,\n    to: '/roles',\n    Icon: RolesIcon,\n  });\n  checkPermissions(permissions, objects.USERS) && hideItems.push({\n    key: objects.USERS,\n    to: '/users',\n    Icon: UsersIcon,\n  });\n  checkPermissions(permissions, objects.SYSTEM) && hideItems.push({\n    key: objects.SYSTEM,\n    to: '/system',\n    Icon: SystemIcon,\n  });\n\n  return (\n    <Drawer\n      variant={'permanent'}\n      className={classes.aside}\n      classes={{\n        paper: classes.aside,\n      }}\n    >\n      <div className={classes.toolbar} />\n\n      <List>\n        <Item Icon={TestIcon} to={'/'} />\n        <Item Icon={ProfileIcon} to={'/profile'} />\n        <Item Icon={ContactsIcon} to={'/contacts'} />\n        <Item Icon={GroupsIcon} to={'/groups'} />\n      </List>\n      {hideItems.length ? (\n        <Fragment>\n          <Divider />\n          <List>\n            {hideItems.map(({ key, to, Icon }) => (\n              <Item key={key} to={to} Icon={Icon} />\n            ))}\n          </List>\n        </Fragment>\n      ) : null}\n    </Drawer>\n  );\n});\n\nexport default inject(({ AuthStore }) => {\n  return {\n    AuthStore,\n  };\n})(View);\n","import React from 'react';\nimport View from './view';\n\nconst Aside = () => (\n  <View />\n);\n\nexport default Aside;\n","import React from 'react';\r\nimport {\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nexport default function MainPage() {\r\n\r\n  return (\r\n    <Typography variant=\"h4\">\r\n      Главная\r\n    </Typography>\r\n  );\r\n}\r\n","import { makeAutoObservable } from 'mobx';\n\nclass ProfileStore {\n  profile = null;\n\n  open = false;\n  password = '';\n  newPassword = '';\n\n  constructor() {\n    makeAutoObservable(this);\n\n    this.getProfile();\n  }\n\n  setProfile = (profile) => {\n    this.profile = profile;\n  }\n\n  setOpen = (open) => {\n    this.open = open;\n  }\n\n  setPassword = (password) => {\n    this.password = password;\n  }\n\n  setNewPassword = (newPassword) => {\n    this.newPassword = newPassword;\n  }\n\n  onOpen = () => {\n    this.setOpen(true);\n    this.setPassword('');\n  }\n\n  onClose = () => {\n    this.setOpen(false);\n    this.setPassword('');\n  }\n\n  getProfile = async() => {\n    let profile = null;\n    \n    try {\n      profile = await api('accounts/getProfile');\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось получить профиль'\n      });\n    }\n\n    this.setPassword('');\n    this.setNewPassword('');\n    this.setProfile(profile);\n  }\n\n  updateLink = async() => {\n    try {\n      await api('accounts/updateLink')\n        .method('put');\n\n      notify({\n        variant: 'success',\n        message: 'Ссылка обновлена'\n      });\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось обновить ссылку'\n      });\n    }\n\n    this.getProfile();\n  }\n\n  updatePassword = async() => {\n    const {\n      password,\n      newPassword,\n    } = this;\n\n    try {\n      await api('accounts/updatePassword')\n        .method('put')\n        .body({\n          oldPassword: password,\n          newPassword\n        });\n\n      notify({\n        variant: 'success',\n        message: 'Пароль обновлён'\n      });\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось обновить пароль'\n      });\n    }\n\n    this.getProfile();\n  }\n\n  deleteAccount = async() => {\n    const { password } = this;\n\n    try {\n      await api('accounts/deleteAccount')\n        .method('delete')\n        .body({ password });\n      \n      window.location = '/';\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось удалить аккаунт'\n      });\n    }\n  }\n}\n\nexport default ProfileStore;\n","import { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n  TextField,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/RefreshOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    marginRight: '16px'\n  },\n}));\n\nconst ProfileView = observer(({ store }) => {\n  const classes = useStyles();\n\n  const {\n    profile,\n    open,\n    password,\n    newPassword,\n    setPassword,\n    setNewPassword,\n    onOpen,\n    onClose,\n    updateLink,\n    updatePassword,\n    deleteAccount,\n  } = store;\n\n  if (!profile) {\n    return (\n      <Fragment>\n        <Typography variant={'h4'}>\n          Профиль\n        </Typography>\n\n        <div>Не удалось получить профиль пользователя</div>\n      </Fragment>\n    );\n  }\n\n  const {\n    id,\n    email,\n    link,\n  } = profile;\n\n  return (\n    <Fragment>\n      <Typography variant={'h4'}>\n        Профиль\n      </Typography>\n\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell variant={'head'}>ID</TableCell>\n            <TableCell>{id}</TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell variant={'head'}>Email</TableCell>\n            <TableCell>{email}</TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell variant={'head'}>Link</TableCell>\n            <TableCell>\n              {link}\n\n              <IconButton onClick={updateLink}>\n                <RefreshIcon />\n              </IconButton>\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell variant={'head'}>Password</TableCell>\n            <TableCell>\n              <TextField\n                className={classes.input}\n                type={'password'}\n                placeholder={'Старый пароль'}\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n              />\n\n              <TextField\n                className={classes.input}\n                type={'password'}\n                placeholder={'Новый пароль'}\n                value={newPassword}\n                onChange={(event) => setNewPassword(event.target.value)}\n              />\n\n              <Button onClick={updatePassword}>\n                Обновить\n              </Button>\n            </TableCell>\n          </TableRow>\n\n          <TableRow>\n            <TableCell variant={'head'}>Удалить аккаунт</TableCell>\n            <TableCell>\n              <Button\n                color={'secondary'}\n                variant={'outlined'}\n                onClick={onOpen}\n              >\n                Удалить\n              </Button>\n\n              <Dialog\n                open={open}\n                onClose={onClose}\n              >\n                <DialogTitle>Вы уверены, что хотите удалить аккаунт?</DialogTitle>\n\n                <DialogContent>\n                  <DialogContentText>\n                    Если вы удалите аккаунт, то все контакты, группы, тесты и результаты будут потеряны.\n                  </DialogContentText>\n\n                  <DialogActions>\n                    <Button\n                      color={'primary'}\n                      onClick={onClose}\n                    >\n                      Отмена\n                    </Button>\n                    <Button\n                      color={'primary'}\n                      onClick={deleteAccount}\n                    >\n                      Удалить\n                    </Button>\n                  </DialogActions>\n                </DialogContent>\n              </Dialog>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </Fragment>\n  );\n});\n\nexport default ProfileView;\n","import Store from './store';\nimport View from './view';\n\nconst Profile = () => {\n  const store = new Store();\n\n  return <View store={store} />;\n};\n\nexport default Profile;\n","import { makeAutoObservable } from 'mobx';\n\nclass ContactsStore {\n  contacts = [];\n  count = 0;\n  datetime = 0;\n\n  link = '';\n\n  get email() {\n    return this.SearchStore.value;\n  }\n\n  constructor({ SearchStore }) {\n    makeAutoObservable(this);\n\n    this.SearchStore = SearchStore;\n\n    this.searchContacts();\n  }\n  \n  setResult = ({ contacts, count }, datetime) => {\n    if (this.datetime > datetime) {\n      return;\n    }\n\n    this.contacts = contacts;\n    this.count = count;\n    this.datetime = datetime;\n  }\n\n  setLink = (link) => {\n    this.link = link;\n  }\n\n  searchContacts = async(email = '', datetime = Date.now()) => {\n    try {\n      const result = await api('contacts/searchContacts')\n        .method('post')\n        .query({ email });\n      \n      this.setResult(result, datetime);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось выполнить поиск контактов'\n      });\n    }\n  }\n\n  updateContacts = () => {\n    this.searchContacts(this.email);\n  }\n\n  createContact = async() => {\n    const { link } = this;\n\n    try {\n      await api('contacts/createContact')\n        .method('post')\n        .body({ link });\n      \n      this.updateContacts();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось добавить контакт'\n      });\n    }\n  }\n\n  deleteContact = async(id) => {\n    try {\n      await api('contacts/deleteContact')\n        .method('delete')\n        .query({ id });\n      \n      this.updateContacts();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось удалить контакт'\n      });\n    }\n  }\n}\n\nexport default ContactsStore;\n","import { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Paper,\n  TextField,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    display: 'flex',\n    padding: '16px',\n    marginTop: '16px',\n  },\n  input: {\n    width: '350px',\n    marginRight: '8px'\n  },\n}));\n\nconst ContactsView = observer(({ store }) => {\n  const classes = useStyles();\n\n  const {\n    contacts,\n    count,\n    email,\n    link,\n    setLink,\n    createContact,\n    deleteContact,\n  } = store;\n\n  return (\n    <Fragment>\n      <Typography variant={'h4'}>\n        Контакты\n      </Typography>\n\n      <Paper\n        className={classes.paper}\n        variant={'outlined'}\n      >\n        <TextField\n          className={classes.input}\n          size={'small'}\n          variant={'outlined'}\n          label={'Добавить контакт'}\n          placeholder={'Ссылка пользователя...'}\n          value={link}\n          onChange={(event) => setLink(event.target.value)}\n        />\n\n        <Button\n          onClick={createContact}\n        >\n          Добавить\n        </Button>\n      </Paper>\n\n      {count ? (\n        <List>\n          {contacts.map(({ id, email }) => (\n            <ListItem key={id}>\n              <ListItemAvatar>\n                <Avatar />\n              </ListItemAvatar>\n\n              <ListItemText primary={email} />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge={'end'}\n                  onClick={() => deleteContact(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <p>\n          Ничего не найдено по запросу: {email}\n        </p>\n      )}\n    </Fragment>\n  );\n});\n\nexport default ContactsView;\n","import { Component } from 'react';\nimport { inject } from 'mobx-react';\nimport Store from './store';\nimport View from './view';\n\nclass Contacts extends Component {\n  constructor(props) {\n    super(props);\n\n    const { SearchStore } = this.props;\n\n    this.store = new Store({ SearchStore });\n  }\n\n  componentDidMount() {\n    const { SearchStore } = this.props;\n\n    SearchStore.setView(true);\n    SearchStore.setPlaceholder('Введите email пользователя...');\n    SearchStore.setOnValueChange(this.store.searchContacts);\n  }\n\n  componentWillUnmount() {\n    this.props.SearchStore.clear();\n  }\n\n  render() {\n    return <View store={this.store} />;\n  }\n}\n\nexport default inject(\n  ({ SearchStore }) => { \n    return {\n      SearchStore\n    };\n  }\n)(Contacts);\n","import { makeAutoObservable } from 'mobx';\n\nclass GroupsStore {\n  groups = [];\n  count = 0;\n  datetime = 0;\n\n  get title() {\n    return this.SearchStore.value;\n  }\n\n  constructor({ SearchStore }) {\n    makeAutoObservable(this);\n\n    this.SearchStore = SearchStore;\n\n    this.searchGroups();\n  }\n  \n  setResult = ({ groups, count }, datetime) => {\n    if (this.datetime > datetime) {\n      return;\n    }\n\n    this.groups = groups;\n    this.count = count;\n    this.datetime = datetime;\n  }\n\n  searchGroups = async(title = '', datetime = Date.now()) => {\n    try {\n      const result = await api('groups/searchGroups')\n        .query({ title });\n      \n      this.setResult(result, datetime);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось выполнить поиск групп'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.searchGroups(this.title);\n  }\n\n  deleteGroup = async(id) => {\n    try {\n      await api('groups/deleteGroup')\n        .method('delete')\n        .query({ id });\n      \n      this.refresh();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось удалить группу'\n      });\n    }\n  }\n}\n\nexport default GroupsStore;\n","import { makeAutoObservable, autorun } from 'mobx';\n\nclass ContactsStore {\n  contacts = [];\n  count = 0;\n  datetime = 0;\n\n  get noContactIds() {\n    return this.GroupStore.contactIds;\n  }\n\n  constructor({ GroupStore }) {\n    makeAutoObservable(this);\n    \n    this.GroupStore = GroupStore;\n\n    this.disposer = autorun(() => {\n      this.searchContacts();\n    });\n  }\n\n  setResult = ({ contacts, count }, datetime) => {\n    if (this.datetime > datetime) {\n      return;\n    }\n\n    this.contacts = contacts;\n    this.count = count;\n    this.datetime = datetime;\n  }\n\n  searchContacts = async(email = '', datetime = Date.now()) => {\n    const { noContactIds } = this;\n\n    try {\n      const result = await api('contacts/searchContacts')\n        .method('post')\n        .query({ email })\n        .body({ noContactIds });\n      \n      this.setResult(result, datetime);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось выполнить поиск контактов'\n      });\n    }\n  }\n\n  dispose = () => {\n    this.disposer();\n  }\n}\n\nexport default ContactsStore;\n","import { makeObservable, observable, computed, action, toJS } from 'mobx';\nimport ContactsStore from './contacts';\nimport GroupViewStore from './view';\n\nclass GroupEditStore extends GroupViewStore {\n  open = false;\n\n  get contactIds() {\n    return this.contacts.map(({ id }) => id);\n  }\n\n  constructor({ GroupsStore }) {\n    super({ GroupsStore });\n\n    makeObservable(this, {\n      open: observable,\n      contactIds: computed,\n      setOpen: action,\n    });\n\n    this.onOpen = this.onOpen.bind(this);\n\n    this.ContactsStore = new ContactsStore({ GroupStore: this });\n  }\n\n  setOpen = (open) => {\n    this.open = open;\n  }\n\n  onOpen(group) {\n    this.setOpen(true);\n    this.setGroup(group);\n  }\n\n  onClose = () => {\n    this.setOpen(false);\n  }\n\n  addContact = (contact) => {    \n    const exists = this.contacts.some(({ id }) => id === contact.id);\n\n    if (exists) {\n      return;\n    }\n\n    const contacts = toJS(this.contacts);\n\n    contacts.push(contact);\n\n    this.setContacts(contacts)\n  }\n\n  removeContact = (contactId) => {\n    let contacts = toJS(this.contacts);\n\n    contacts = contacts.filter(\n      ({ id }) => id !== contactId\n    );\n\n    this.setContacts(contacts);\n  }\n\n  onSave = async() => {\n    const {\n      id,\n      title,\n      contactIds,\n    } = this;\n\n    try {\n      await api('groups/updateGroup')\n        .method('put')\n        .query({ id })\n        .body({ \n          title,\n          contactIds,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось изменить группу'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.GroupsStore.refresh();\n  }\n\n  dispose = () => {\n    this.ContactsStore.dispose();\n  }\n}\n\nexport default GroupEditStore;\n","import { makeObservable, observable, computed, action, toJS } from 'mobx';\n\nclass GroupViewStore {\n  group = {};\n\n  get id() {\n    return this.group.id || null;\n  }\n\n  get title() {\n    return this.group.title || '';\n  }\n\n  get contacts() {\n    return this.group.contacts || [];\n  }\n\n  constructor({ GroupsStore, group = {} }) {\n    this.GroupsStore = GroupsStore;\n    this.group = toJS(group);\n\n    makeObservable(this, {\n      group: observable,\n      title: computed,\n      contacts: computed,\n      setGroup: action,\n      setTitle: action,\n      setContacts: action,\n    });\n  }\n\n  setGroup = (group) => {\n    this.group = toJS(group);\n  }\n\n  setTitle = (title) => {\n    this.group.title = toJS(title);\n  }\n\n  setContacts = (contacts) => {\n    this.group.contacts = toJS(contacts);\n  }\n}\n\nexport default GroupViewStore;\n","import GroupEditStore from './edit';\n\nconst defaultGroup = {\n  title: '',\n  contacts: [],\n};\n\nclass GroupCreateStore extends GroupEditStore {\n  constructor({ GroupsStore }) {\n    super({ GroupsStore });\n\n    this.onOpen = this.onOpen.bind(this);\n  }\n\n  onOpen() {\n    super.onOpen(defaultGroup);\n  }\n\n  onSave = async() => {\n    const {\n      title,\n      contactIds,\n    } = this;\n\n    try {\n      await api('groups/createGroup')\n        .method('post')\n        .body({ \n          title,\n          contactIds,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось добавить группу'\n      });\n    }\n  }\n}\n\nexport default GroupCreateStore;\n","import { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  IconButton,\n  TextField,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport GroupIcon from '@material-ui/icons/Group';\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    marginBottom: '8px'\n  },\n}));\n\nconst ContactsView = observer(({ ContactsStore }) => {\n  const {\n    contacts,\n    searchContacts,\n    GroupStore: {\n      addContact,\n    },\n  } = ContactsStore;\n\n  return (\n    <Autocomplete\n      fullWidth={true}\n      getOptionLabel={(option) => option.email}\n      getOptionSelected={(option, value) => option.id === value.id}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={'Контакты'}\n          variant={'outlined'}\n        />\n      )}\n      options={contacts}\n      onChange={(_, contact, reason) => {\n        if (reason !== 'select-option') {\n          return;\n        }\n\n        addContact(contact);\n      }}\n      onInputChange={(_, email, reason) => {\n        if (reason !== 'input') {\n          return;\n        }\n        \n        searchContacts(email);\n      }}\n    />\n  );\n});\n\nconst GroupView = observer(({ GroupStore }) => {\n  const classes = useStyles();\n\n  const {\n    id,\n    title,\n    contacts,\n    setTitle,\n    removeContact,\n    open,\n    onClose,\n    onSave,\n    ContactsStore,\n  } = GroupStore;\n\n  return (\n    <Dialog\n      scroll={'paper'}\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>\n        {id ? `Редактирование группы #${id}` : 'Создание группы'}\n      </DialogTitle>\n\n      <DialogContent dividers={true}>\n        <TextField\n          className={classes.input}\n          label={'Название'}\n          variant={'outlined'}\n          fullWidth={true}\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n        />\n\n        <ContactsView ContactsStore={ContactsStore} />\n\n        <List>\n          {contacts.map(({ id, email }) => (\n            <ListItem key={id}>\n              <ListItemAvatar>\n                <Avatar />\n              </ListItemAvatar>\n\n              <ListItemText primary={email} />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge={'end'}\n                  onClick={() => removeContact(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          color={'primary'}\n          onClick={onClose}\n        >\n          Отмена\n        </Button>\n        <Button\n          color={'primary'}\n          onClick={onSave}\n        >\n          Сохранить\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n\nconst GroupsView = observer(({\n  GroupsStore,\n  GroupEditStore,\n  GroupCreateStore,\n}) => {\n  const {\n    groups,\n    count,\n    title,\n    deleteGroup,\n  } = GroupsStore;\n\n  return (\n    <Fragment>\n      <Typography variant={'h4'}>\n        Группы\n\n        <IconButton\n          edge={'end'}\n          onClick={GroupCreateStore.onOpen}\n        >\n          <AddIcon />\n        </IconButton>\n      </Typography>\n\n      {count ? (\n        <List>\n          {groups.map((group) => {\n            const { id, title } = group;\n\n            return (\n              <ListItem\n                key={id}\n                onClick={() => GroupEditStore.onOpen(group)}\n              >\n                <ListItemAvatar>\n                  <Avatar>\n                    <GroupIcon />\n                  </Avatar>\n                </ListItemAvatar>\n\n                <ListItemText primary={title} />\n\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge={'end'}\n                    onClick={() => deleteGroup(id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <p>\n          Ничего не найдено по запросу: {title}\n        </p>\n      )}\n\n      <GroupView GroupStore={GroupEditStore} />\n      <GroupView GroupStore={GroupCreateStore} />\n    </Fragment>\n  );\n});\n\nexport default GroupsView;\n","import { Component } from 'react';\nimport { inject } from 'mobx-react';\nimport Store from './store';\nimport GroupEditStore from './group/edit';\nimport GroupCreateStore from './group/create';\nimport View from './view';\n\nclass Groups extends Component {\n  constructor(props) {\n    super(props);\n\n    const { SearchStore } = this.props;\n\n    const GroupsStore = new Store({ SearchStore });\n\n    this.GroupsStore = GroupsStore;\n    this.GroupEditStore = new GroupEditStore({ GroupsStore });\n    this.GroupCreateStore = new GroupCreateStore({ GroupsStore });\n  }\n\n  componentDidMount() {\n    const { SearchStore } = this.props;\n\n    SearchStore.setView(true);\n    SearchStore.setPlaceholder('Введите название группы...');\n    SearchStore.setOnValueChange(this.GroupsStore.searchGroups);\n  }\n\n  componentWillUnmount() {\n    this.props.SearchStore.clear();\n\n    this.GroupEditStore.dispose();\n    this.GroupCreateStore.dispose();\n  }\n\n  render() {\n    return (\n      <View\n        GroupsStore={this.GroupsStore}\n        GroupEditStore={this.GroupEditStore}\n        GroupCreateStore={this.GroupCreateStore}\n      />\n    );\n  }\n}\n\nexport default inject(\n  ({ SearchStore }) => { \n    return {\n      SearchStore\n    };\n  }\n)(Groups);\n","import { makeAutoObservable } from 'mobx';\n\nclass RolesStore {\n  roles = [];\n  count = 0;\n  datetime = 0;\n\n  get name() {\n    return this.SearchStore.value;\n  }\n\n  constructor({ SearchStore }) {\n    makeAutoObservable(this);\n\n    this.SearchStore = SearchStore;\n\n    this.searchRoles();\n  }\n  \n  setResult = ({ roles, count }, datetime) => {\n    if (this.datetime > datetime) {\n      return;\n    }\n\n    this.roles = roles;\n    this.count = count;\n    this.datetime = datetime;\n  }\n\n  searchRoles = async(name = '', datetime = Date.now()) => {\n    try {\n      const result = await api('roles/searchRoles')\n        .method('post')\n        .query({ name });\n      \n      this.setResult(result, datetime);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось выполнить поиск ролей'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.searchRoles(this.name);\n  }\n\n  deleteRole = async(id) => {\n    try {\n      await api('roles/deleteRole')\n        .method('delete')\n        .query({ id });\n      \n      this.refresh();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось удалить роль'\n      });\n    }\n  }\n}\n\nexport default RolesStore;\n","import { makeAutoObservable } from 'mobx';\n\nclass ContactsStore {\n  _permissions = [];\n\n  get permissions() {\n    return this._permissions.filter((id) => !this.noPermissionIds.includes(id));\n  }\n\n  get noPermissionIds() {\n    return this.RoleStore.permissionIds;\n  }\n\n  constructor({ RoleStore }) {\n    makeAutoObservable(this);\n    \n    this.RoleStore = RoleStore;\n\n    this.getPermissions();\n  }\n\n  setPermissions = (permissions) => {\n    this._permissions = permissions;\n  }\n\n  getPermissions = async() => {\n    try {\n      const permissions = await api('permissions/getPermissions');\n      \n      this.setPermissions(permissions);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось получить список разрешений'\n      });\n    }\n  }\n}\n\nexport default ContactsStore;\n","import { makeObservable, observable, action, toJS } from 'mobx';\nimport PermissionsStore from './permissions';\nimport RoleViewStore from './view';\n\nclass RoleEditStore extends RoleViewStore {\n  open = false;\n\n  constructor({ RolesStore }) {\n    super({ RolesStore });\n\n    makeObservable(this, {\n      open: observable,\n      setOpen: action,\n    });\n\n    this.onOpen = this.onOpen.bind(this);\n\n    this.PermissionsStore = new PermissionsStore({ RoleStore: this });\n  }\n\n  setOpen = (open) => {\n    this.open = open;\n  }\n\n  onOpen(role) {\n    this.setOpen(true);\n    this.setRole(role);\n  }\n\n  onClose = () => {\n    this.setOpen(false);\n  }\n\n  addPermission = ({ id }) => {\n    const exists = this.permissionIds.includes(id);\n\n    if (exists) {\n      return;\n    }\n\n    const permissionIds = toJS(this.permissionIds);\n\n    permissionIds.push(id);\n\n    this.setPermissionIds(permissionIds);\n  }\n\n  removePermission = (permissionId) => {\n    let permissionIds = toJS(this.permissionIds);\n\n    permissionIds = permissionIds.filter(\n      (id) => id !== permissionId\n    );\n\n    this.setPermissionIds(permissionIds);\n  }\n\n  onSave = async() => {\n    const {\n      id,\n      name,\n      permissionIds,\n    } = this;\n\n    try {\n      await api('roles/updateRole')\n        .method('put')\n        .query({ id })\n        .body({ \n          name,\n          permissionIds,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось изменить роль'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.RolesStore.refresh();\n  }\n}\n\nexport default RoleEditStore;\n","import { makeObservable, observable, computed, action, toJS } from 'mobx';\n\nclass RoleViewStore {\n  role = {};\n\n  get id() {\n    return this.role.id || null;\n  }\n\n  get name() {\n    return this.role.name || '';\n  }\n\n  get permissionIds() {\n    return this.role.permissionIds || [];\n  }\n\n  constructor({ RolesStore, role = {} }) {\n    this.RolesStore = RolesStore;\n    this.role = toJS(role);\n\n    makeObservable(this, {\n      role: observable,\n      name: computed,\n      permissionIds: computed,\n      setRole: action,\n      setName: action,\n      setPermissionIds: action,\n    });\n  }\n\n  setRole = (role) => {\n    this.role = toJS(role);\n  }\n\n  setName = (name) => {\n    this.role.name = toJS(name);\n  }\n\n  setPermissionIds = (permissionIds) => {\n    this.role.permissionIds = toJS(permissionIds);\n  }\n}\n\nexport default RoleViewStore;\n","import RoleEditStore from './edit';\n\nconst defaultGroup = {\n  name: '',\n  permissionIds: [],\n};\n\nclass RoleCreateStore extends RoleEditStore {\n  constructor({ RolesStore }) {\n    super({ RolesStore });\n\n    this.onOpen = this.onOpen.bind(this);\n  }\n\n  onOpen() {\n    super.onOpen(defaultGroup);\n  }\n\n  onSave = async() => {\n    const {\n      name,\n      permissionIds,\n    } = this;\n\n    try {\n      await api('roles/createRole')\n        .method('post')\n        .body({ \n          name,\n          permissionIds,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось добавить роль'\n      });\n    }\n  }\n}\n\nexport default RoleCreateStore;\n","import { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  IconButton,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { actions, objects } from '../../../../enums';\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    marginBottom: '8px'\n  },\n}));\n\nconst PermissionsView = observer(({ PermissionsStore }) => {\n  const {\n    permissions,\n    RoleStore: {\n      permissionIds,\n      setPermissionIds,\n    },\n  } = PermissionsStore;\n\n  return (\n    <Fragment>\n      <InputLabel htmlFor={'select-permissions'}>\n        Разрешения\n      </InputLabel>\n      <Select\n        id={'select-permissions'}\n        variant={'outlined'}\n        multiple={true}\n        fullWidth={true}\n        value={permissionIds}\n        onChange={(event) => setPermissionIds(event.target.value)}\n      >\n        {permissions.map(({ id, object, action }) => (\n          <MenuItem\n            key={id}\n            value={id}\n          >\n            {`${objects.getTitle(object)} -> ${actions.getTitle(action)}`}\n          </MenuItem>\n        ))}\n      </Select>\n    </Fragment>\n  );\n});\n\nconst RoleView = observer(({ RoleStore }) => {\n  const classes = useStyles();\n\n  const {\n    id,\n    name,\n    setName,\n    open,\n    onClose,\n    onSave,\n    PermissionsStore,\n  } = RoleStore;\n\n  return (\n    <Dialog\n      scroll={'paper'}\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>\n        {id ? `Редактирование роли #${id}` : 'Создание роли'}\n      </DialogTitle>\n\n      <DialogContent dividers={true}>\n        <TextField\n          className={classes.input}\n          label={'Название'}\n          variant={'outlined'}\n          fullWidth={true}\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n\n        <PermissionsView PermissionsStore={PermissionsStore} />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          color={'primary'}\n          onClick={onClose}\n        >\n          Отмена\n        </Button>\n        <Button\n          color={'primary'}\n          onClick={onSave}\n        >\n          Сохранить\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n\nconst RolesView = observer(({\n  RolesStore,\n  RoleEditStore,\n  RoleCreateStore,\n}) => {\n  const {\n    roles,\n    count,\n    name,\n    deleteRole,\n  } = RolesStore;\n\n  return (\n    <Fragment>\n      <Typography variant={'h4'}>\n        Роли\n\n        <IconButton\n          edge={'end'}\n          onClick={RoleCreateStore.onOpen}\n        >\n          <AddIcon />\n        </IconButton>\n      </Typography>\n\n      {count ? (\n        <List>\n          {roles.map((role) => {\n            const { id, name } = role;\n\n            return (\n              <ListItem\n                key={id}\n                onClick={() => RoleEditStore.onOpen(role)}\n              >\n                <ListItemText primary={name} />\n\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge={'end'}\n                    onClick={() => deleteRole(id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <p>\n          Ничего не найдено по запросу: {name}\n        </p>\n      )}\n\n      <RoleView RoleStore={RoleEditStore} />\n      <RoleView RoleStore={RoleCreateStore} />\n    </Fragment>\n  );\n});\n\nexport default RolesView;\n","import { Component } from 'react';\nimport { inject } from 'mobx-react';\nimport Store from './store';\nimport RoleEditStore from './role/edit';\nimport RoleCreateStore from './role/create';\nimport View from './view';\n\nclass Roles extends Component {\n  constructor(props) {\n    super(props);\n\n    const { SearchStore } = this.props;\n\n    const RolesStore = new Store({ SearchStore });\n\n    this.RolesStore = RolesStore;\n    this.RoleEditStore = new RoleEditStore({ RolesStore });\n    this.RoleCreateStore = new RoleCreateStore({ RolesStore });\n  }\n\n  componentDidMount() {\n    const { SearchStore } = this.props;\n\n    SearchStore.setView(true);\n    SearchStore.setPlaceholder('Введите название роли...');\n    SearchStore.setOnValueChange(this.RolesStore.searchRoles);\n  }\n\n  componentWillUnmount() {\n    this.props.SearchStore.clear();\n  }\n\n  render() {\n    return (\n      <View\n        RolesStore={this.RolesStore}\n        RoleEditStore={this.RoleEditStore}\n        RoleCreateStore={this.RoleCreateStore}\n      />\n    );\n  }\n}\n\nexport default inject(\n  ({ SearchStore }) => { \n    return {\n      SearchStore\n    };\n  }\n)(Roles);\n","import { makeAutoObservable } from 'mobx';\n\nclass UsersStore {\n  users = [];\n  count = 0;\n  datetime = 0;\n\n  get email() {\n    return this.SearchStore.value;\n  }\n\n  constructor({ SearchStore }) {\n    makeAutoObservable(this);\n\n    this.SearchStore = SearchStore;\n\n    this.searchUsers();\n  }\n\n  setResult = ({ users, count }, datetime) => {\n    if (this.datetime > datetime) {\n      return;\n    }\n\n    this.users = users;\n    this.count = count;\n    this.datetime = datetime;\n  }\n\n  searchUsers = async(email = '', datetime = Date.now()) => {\n    try {\n      const result = await api('users/searchUsers')\n        .query({ email });\n      \n      this.setResult(result, datetime);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось выполнить поиск пользователей'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.searchUsers(this.email);\n  }\n\n  deleteUser = async(id) => {\n    try {\n      await api('users/deleteUser')\n        .method('delete')\n        .query({ id });\n      \n      this.refresh();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось удалить пользователя'\n      });\n    }\n  }\n}\n\nexport default UsersStore;\n","import { makeAutoObservable, autorun } from 'mobx';\n\nclass RolesStore {\n  roles = [];\n  count = 0;\n  datetime = 0;\n\n  get noRoleIds() {\n    return this.UserStore.roleIds;\n  }\n\n  constructor({ UserStore }) {\n    makeAutoObservable(this);\n\n    this.UserStore = UserStore;\n\n    this.disposer = autorun(() => {\n      this.searchRoles();\n    });\n  }\n\n  setResult = ({ roles, count }, datetime) => {\n    if (this.datetime > datetime) {\n      return;\n    }\n\n    this.roles = roles;\n    this.count = count;\n    this.datetime = datetime;\n  }\n\n  searchRoles = async(name = '', datetime = Date.now()) => {\n    const { noRoleIds } = this;\n\n    try {\n      const result = await api('roles/searchRoles')\n        .method('post')\n        .query({ name })\n        .body({ noRoleIds });\n      \n      this.setResult(result, datetime);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось выполнить поиск ролей'\n      });\n    }\n  }\n\n  dispose = () => {\n    this.disposer();\n  }\n}\n\nexport default RolesStore;\n","import { makeObservable, observable, computed, action, toJS } from 'mobx';\nimport RolesStore from './roles';\nimport UserViewStore from './view';\n\nclass UserEditStore extends UserViewStore {\n  open = false;\n\n  disabledFields = {\n    email: true,\n  };\n\n  get roleIds() {\n    return this.roles.map(({ id }) => id);\n  }\n  \n  constructor({ UsersStore }) {\n    super({ UsersStore });\n    \n    makeObservable(this, {\n      open: observable,\n      roleIds: computed,\n      setOpen: action,\n    });\n\n    this.onOpen = this.onOpen.bind(this);\n\n    this.RolesStore = new RolesStore({ UserStore: this });\n  }\n\n  setOpen = (open) => {\n    this.open = open;\n  }\n\n  onOpen(user) {\n    this.setOpen(true);\n    this.setUser(user);\n  }\n\n  onClose = () => {\n    this.setOpen(false);\n  }\n\n  addRole = (role) => {\n    const exists = this.roles.some(({ id }) => id === role.id);\n\n    if (exists) {\n      return;\n    }\n\n    const roles = toJS(this.roles);\n\n    roles.push(role);\n\n    this.setRoles(roles);\n  }\n\n  removeRole = (roleId) => {\n    let roles = toJS(this.roles);\n\n    roles = roles.filter(\n      ({ id }) => id !== roleId\n    );\n\n    this.setRoles(roles);\n  }\n\n  onSave = async() => {\n    const {\n      id,\n      roleIds\n    } = this;\n\n    try {\n      await api('users/updateUser')\n        .method('put')\n        .query({ id })\n        .body({ roleIds });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось изменить пользователя'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.UsersStore.refresh();\n  }\n\n  dispose = () => {\n    this.RolesStore.dispose();\n  }\n}\n\nexport default UserEditStore;\n","import { makeObservable, observable, computed, action, toJS } from 'mobx';\n\nclass UserViewStore {\n  user = {};\n\n  get id() {\n    return this.user.id || null;\n  }\n\n  get email() {\n    return this.user.email || '';\n  }\n\n  get password() {\n    return this.user.password;\n  }\n  \n  get roles() {\n    return this.user.roles || [];\n  }\n\n  constructor({ UsersStore, user = {} }) {\n    this.UsersStore = UsersStore;\n    this.user = toJS(user);\n\n    makeObservable(this, {\n      user: observable,\n      email: computed,\n      password: computed,\n      roles: computed,\n      setUser: action,\n      setEmail: action,\n      setPassword: action,\n      setRoles: action,\n    });\n  }\n\n  setUser = (user) => {\n    this.user = toJS(user);\n  }\n\n  setEmail = (email) => {\n    this.user.email = toJS(email);\n  }\n\n  setPassword = (password) => {\n    this.user.password = toJS(password);\n  }\n\n  setRoles = (roles) => {\n    this.user.roles = toJS(roles);\n  }\n}\n\nexport default UserViewStore;\n","import UserEditStore from './edit';\n\nconst defaultUser = {\n  email: '',\n  password: '',\n  roleIds: [],\n};\n\nclass UserCreateStore extends UserEditStore {\n  disabledFields = {};\n\n  constructor({ UsersStore }) {\n    super({ UsersStore });\n\n    this.onOpen = this.onOpen.bind(this);\n  }\n\n  onOpen() {\n    super.onOpen(defaultUser);\n  }\n\n  onSave = async() => {\n    const {\n      email,\n      password,\n      roleIds,\n    } = this;\n\n    try {\n      await api('users/createUser')\n        .method('post')\n        .body({ \n          email,\n          password,\n          roleIds,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось добавить пользователя'\n      });\n    }\n  }\n}\n\nexport default UserCreateStore;\n","import { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  IconButton,\n  TextField,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    marginBottom: '8px'\n  },\n}));\n\nconst RolesView = observer(({ RolesStore }) => {\n  const {\n    roles,\n    searchRoles,\n    UserStore: {\n      disabledFields,\n      addRole,\n    },\n  } = RolesStore;\n\n  return (\n    <Autocomplete\n      fullWidth={true}\n      getOptionLabel={(option) => option.name}\n      getOptionSelected={(option, value) => option.id === value.id}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={'Роли'}\n          variant={'outlined'}\n        />\n      )}\n      options={roles}\n      onChange={(_, role, reason) => {\n        if (reason !== 'select-option') {\n          return;\n        }\n\n        addRole(role);\n      }}\n      onInputChange={(_, name, reason) => {\n        if (reason !== 'input') {\n          return;\n        }\n        \n        searchRoles(name);\n      }}\n      disabled={disabledFields.roles}\n    />\n  );\n});\n\nconst UserView = observer(({ UserStore }) => {\n  const classes = useStyles();\n\n  const {\n    id,\n    email,\n    password,\n    roles,\n    disabledFields,\n    setEmail,\n    setPassword,\n    removeRole,\n    open,\n    onClose,\n    onSave,\n    RolesStore,\n  } = UserStore;\n\n  return (\n    <Dialog\n      scroll={'paper'}\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>\n        {id ? `Редактирование пользователя #${id}` : 'Создание пользователя'}\n      </DialogTitle>\n\n      <DialogContent dividers={true}>\n        <TextField\n          className={classes.input}\n          label={'Email'}\n          variant={'outlined'}\n          fullWidth={true}\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          disabled={disabledFields.email}\n        />\n\n        {password !== undefined ? (\n          <TextField\n            className={classes.input}\n            label={'Password'}\n            variant={'outlined'}\n            fullWidth={true}\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n        ) : null}\n\n        <RolesView RolesStore={RolesStore} />\n\n        <List>\n          {roles.map(({ id, name }) => (\n            <ListItem key={id}>\n              <ListItemText primary={name} />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge={'end'}\n                  onClick={() => removeRole(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          color={'primary'}\n          onClick={onClose}\n        >\n          Отмена\n        </Button>\n        <Button\n          color={'primary'}\n          onClick={onSave}\n        >\n          Сохранить\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n\nconst UsersView = observer(({\n  UsersStore,\n  UserEditStore,\n  UserCreateStore,\n}) => {\n  const {\n    users,\n    count,\n    email,\n    deleteUser,\n  } = UsersStore;\n\n  return (\n    <Fragment>\n      <Typography variant={'h4'}>\n        Пользователи\n\n        <IconButton\n          edge={'end'}\n          onClick={UserCreateStore.onOpen}\n        >\n          <AddIcon />\n        </IconButton>\n      </Typography>\n\n      {count ? (\n        <List>\n          {users.map((user) => {\n            const { id, email } = user;\n\n            return (\n              <ListItem\n                key={id}\n                onClick={() => UserEditStore.onOpen(user)}\n              >\n                <ListItemAvatar>\n                  <Avatar />\n                </ListItemAvatar>\n\n                <ListItemText primary={email} />\n\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge={'end'}\n                    onClick={() => deleteUser(id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <p>\n          Ничего не найдено по запросу: {email}\n        </p>\n      )}\n\n      <UserView UserStore={UserEditStore} />\n      <UserView UserStore={UserCreateStore} />\n    </Fragment>\n  );\n});\n\nexport default UsersView;\n","import { Component } from 'react';\nimport { inject } from 'mobx-react';\nimport Store from './store';\nimport UserEditStore from './user/edit';\nimport UserCreateStore from './user/create';\nimport View from './view';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    const { SearchStore } = this.props;\n\n    const UsersStore = new Store({ SearchStore });\n\n    this.UsersStore = UsersStore;\n    this.UserEditStore = new UserEditStore({ UsersStore });\n    this.UserCreateStore = new UserCreateStore({ UsersStore });\n  }\n\n  componentDidMount() {\n    const { SearchStore } = this.props;\n\n    SearchStore.setView(true);\n    SearchStore.setPlaceholder('Введите email пользователя...');\n    SearchStore.setOnValueChange(this.UsersStore.searchUsers);\n  }\n\n  componentWillUnmount() {\n    this.props.SearchStore.clear();\n\n    this.UserEditStore.dispose();\n    this.UserCreateStore.dispose();\n  }\n\n  render() {\n    return (\n      <View\n        UsersStore={this.UsersStore}\n        UserEditStore={this.UserEditStore}\n        UserCreateStore={this.UserCreateStore}\n      />\n    );\n  }\n}\n\nexport default inject(\n  ({ SearchStore }) => { \n    return {\n      SearchStore\n    };\n  }\n)(Users);\n","import { makeAutoObservable } from 'mobx';\n\nclass SystemStore {\n  tabIndex = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  setTabIndex = (tabIndex) => {\n    this.tabIndex = tabIndex;\n  }\n\n  onTabIndexChange = (_, tabIndex) => {\n    this.setTabIndex(tabIndex);\n  }\n}\n\nexport default SystemStore;\n","import { makeAutoObservable } from 'mobx';\n\nclass AccountsStore {\n  accounts = [];\n\n  constructor() {\n    makeAutoObservable(this);\n\n    this.getAccounts();\n  }\n\n  setAccounts = (accounts) => {\n    this.accounts = accounts;\n  }\n\n  getAccounts = async() => {\n    try {\n      const accounts = await api('system/getEmailAccounts');\n      \n      this.setAccounts(accounts);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось получить список аккаунтов'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.getAccounts();\n  }\n\n  deleteAccount = async(id) => {\n    try {\n      await api('system/deleteEmailAccount')\n        .method('delete')\n        .query({ id });\n      \n      this.getAccounts();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось удалить аккаунт'\n      });\n    }\n  }\n}\n\nexport default AccountsStore;\n","import { makeObservable, observable, action } from 'mobx';\nimport AccountViewStore from './view';\n\nclass AccountEditStore extends AccountViewStore {\n  open = false;\n\n  constructor({ AccountsStore }) {\n    super({ AccountsStore });\n\n    makeObservable(this, {\n      open: observable,\n      setOpen: action,\n    });\n\n    this.onOpen = this.onOpen.bind(this);\n  }\n\n  setOpen = (open) => {\n    this.open = open;\n  }\n\n  onOpen(account) {\n    this.setOpen(true);\n    this.setAccount(account);\n  }\n\n  onClose = () => {\n    this.setOpen(false);\n  }\n\n  onSave = async() => {\n    const {\n      id,\n      host,\n      port,\n      secure,\n      user,\n      pass,\n    } = this;\n\n    try {\n      await api('system/updateEmailAccount')\n        .method('put')\n        .query({ id })\n        .body({ \n          host,\n          port,\n          secure,\n          user,\n          pass,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось изменить аккаунт'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.AccountsStore.refresh();\n  }\n}\n\nexport default AccountEditStore;\n","import { makeObservable, observable, computed, action, toJS } from 'mobx';\n\nclass AccountViewStore {\n  account = {};\n\n  get id() {\n    return this.account.id || null;\n  }\n\n  get host() {\n    return this.account.host || '';\n  }\n\n  get port() {\n    return this.account.port || 0;\n  }\n\n  get secure() {\n    return this.account.secure || false;\n  }\n\n  get user() {\n    return this.account.user || '';\n  }\n\n  get pass() {\n    return this.account.pass || '';\n  }\n\n  constructor({ AccountsStore, account = {} }) {\n    this.AccountsStore = AccountsStore;\n    this.account = toJS(account);\n\n    makeObservable(this, {\n      account: observable,\n      host: computed,\n      port: computed,\n      secure: computed,\n      user: computed,\n      pass: computed,\n      setAccount: action,\n      setHost: action,\n      setPort: action,\n      setSecure: action,\n      setUser: action,\n      setPass: action,\n    });\n  }\n\n  setAccount = (account) => {\n    this.account = toJS(account);\n  }\n\n  setHost = (host) => {\n    this.account.host = toJS(host);\n  }\n\n  setPort = (port) => {\n    const value = Number(port);\n\n    if (value && (!Number.isInteger(value) || value < 0 || value > (2 ** 16 - 1))) {\n      return;\n    }\n\n    this.account.port = toJS(value);\n  }\n\n  setSecure = (secure) => {\n    this.account.secure = toJS(secure);\n  }\n\n  setUser = (user) => {\n    this.account.user = toJS(user);\n  }\n\n  setPass = (pass) => {\n    this.account.pass = toJS(pass);\n  }\n}\n\nexport default AccountViewStore;\n","import AccountEditStore from './edit';\n\nconst defaultAccount = {\n  host: '',\n  port: 25,\n  secure: false,\n  user: '',\n  pass: '',\n};\n\nclass AccountCreateStore extends AccountEditStore {\n  constructor({ AccountsStore }) {\n    super({ AccountsStore });\n\n    this.onOpen = this.onOpen.bind(this);\n  }\n\n  onOpen() {\n    super.onOpen(defaultAccount);\n  }\n\n  onSave = async() => {\n    const {\n      host,\n      port,\n      secure,\n      user,\n      pass,\n    } = this;\n\n    try {\n      await api('system/createEmailAccount')\n        .method('post')\n        .body({ \n          host,\n          port,\n          secure,\n          user,\n          pass,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось добавить аккаунт'\n      });\n    }\n  }\n}\n\nexport default AccountCreateStore;\n","import { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  IconButton,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    marginTop: '16px',\n  },\n  input: {\n    marginBottom: '8px'\n  },\n}));\n\nconst AccountView = observer(({ AccountStore }) => {\n  const classes = useStyles();\n\n  const {\n    id,\n    host,\n    port,\n    secure,\n    user,\n    pass,\n    setHost,\n    setPort,\n    setSecure,\n    setUser,\n    setPass,\n    open,\n    onClose,\n    onSave,\n  } = AccountStore;\n\n  return (\n    <Dialog\n      scroll={'paper'}\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>\n        {id ? `Редактирование аккаунта #${id}` : 'Создание аккаунта'}\n      </DialogTitle>\n\n      <DialogContent dividers={true}>\n        <TextField\n          className={classes.input}\n          label={'Host'}\n          variant={'outlined'}\n          fullWidth={true}\n          value={host}\n          onChange={(event) => setHost(event.target.value)}\n        />\n\n        <TextField\n          className={classes.input}\n          label={'Port'}\n          variant={'outlined'}\n          fullWidth={true}\n          value={port}\n          onChange={(event) => setPort(event.target.value)}\n        />\n\n        <FormControlLabel\n          className={classes.input}\n          value={'start'}\n          label={'Secure'}\n          labelPlacement={'start'}\n          control={(\n            <Switch\n              color={'primary'}\n              checked={secure}\n              onChange={() => {\n                setSecure(!secure);\n              }}\n            />\n          )}\n        />\n\n        <TextField\n          className={classes.input}\n          label={'User'}\n          variant={'outlined'}\n          fullWidth={true}\n          value={user}\n          onChange={(event) => setUser(event.target.value)}\n        />\n\n        <TextField\n          className={classes.input}\n          label={'Pass'}\n          variant={'outlined'}\n          fullWidth={true}\n          value={pass}\n          onChange={(event) => setPass(event.target.value)}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          color={'primary'}\n          onClick={onClose}\n        >\n          Отмена\n        </Button>\n        <Button\n          color={'primary'}\n          onClick={onSave}\n        >\n          Сохранить\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n\nconst AccountsView = observer(({\n  AccountsStore,\n  AccountEditStore,\n  AccountCreateStore,\n}) => {\n  const classes = useStyles();\n\n  const {\n    accounts,\n    deleteAccount,\n  } = AccountsStore;\n\n  return (\n    <Fragment>\n      <Typography\n        className={classes.title}\n        variant={'h5'}\n      >\n        Email аккаунты\n\n        <IconButton\n          edge={'end'}\n          onClick={AccountCreateStore.onOpen}\n        >\n          <AddIcon />\n        </IconButton>\n      </Typography>\n\n      <List>\n        {accounts.map((account) => {\n          const { id, host, user } = account;\n\n          return (\n            <ListItem\n              key={id}\n              onClick={() => AccountEditStore.onOpen(account)}\n            >\n              <ListItemText primary={host} />\n\n              <ListItemText primary={user} />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge={'end'}\n                  onClick={() => deleteAccount(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n\n      <AccountView AccountStore={AccountEditStore} />\n      <AccountView AccountStore={AccountCreateStore} />\n    </Fragment>\n  );\n});\n\nexport default AccountsView;\n","import AccountsStore from './store';\nimport AccountEditStore from './account/edit';\nimport AccountCreateStore from './account/create';\nimport View from './view';\n\nconst Conditions = () => {\n  const accounts = new AccountsStore();\n  const accountEdit = new AccountEditStore({ AccountsStore: accounts });\n  const accountCreate = new AccountCreateStore({ AccountsStore: accounts });\n\n  return (\n    <View\n      AccountsStore={accounts}\n      AccountEditStore={accountEdit}\n      AccountCreateStore={accountCreate}\n    />\n  );\n};\n\nexport default Conditions;\n","import { makeAutoObservable } from 'mobx';\n\nclass ConditionsStore {\n  conditions = [];\n\n  constructor() {\n    makeAutoObservable(this);\n\n    this.getConditions();\n  }\n\n  setConditions = (conditions) => {\n    this.conditions = conditions;\n  }\n\n  getConditions = async() => {\n    try {\n      const conditions = await api('system/getEmailConditions');\n      \n      this.setConditions(conditions);\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось получить список условий'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.getConditions();\n  }\n\n  deleteCondition = async(id) => {\n    try {\n      await api('system/deleteEmailCondition')\n        .method('delete')\n        .query({ id });\n      \n      this.getConditions();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось удалить условие'\n      });\n    }\n  }\n}\n\nexport default ConditionsStore;\n","import { makeObservable, observable, action } from 'mobx';\nimport ConditionViewStore from './view';\n\nclass ConditionEditStore extends ConditionViewStore {\n  open = false;\n\n  constructor({ ConditionsStore }) {\n    super({ ConditionsStore });\n\n    makeObservable(this, {\n      open: observable,\n      setOpen: action,\n    });\n\n    this.onOpen = this.onOpen.bind(this);\n  }\n\n  setOpen = (open) => {\n    this.open = open;\n  }\n\n  onOpen(data) {\n    this.setOpen(true);\n    this.setData(data);\n  }\n\n  onClose = () => {\n    this.setOpen(false);\n  }\n\n  onSave = async() => {\n    const {\n      id,\n      condition,\n      type,\n    } = this;\n\n    try {\n      await api('system/updateEmailCondition')\n        .method('put')\n        .query({ id })\n        .body({ \n          condition,\n          type,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось изменить условие'\n      });\n    }\n  }\n\n  refresh = () => {\n    this.ConditionsStore.refresh();\n  }\n}\n\nexport default ConditionEditStore;\n","import { makeObservable, observable, computed, action, toJS } from 'mobx';\nimport { system } from '../../../../../../enums';\n\nclass ConditionViewStore {\n  data = {};\n\n  get id() {\n    return this.data.id || null;\n  }\n\n  get condition() {\n    return this.data.condition || '';\n  }\n\n  get type() {\n    return this.data.type || 'white';\n  }\n\n  constructor({ ConditionsStore, data = {} }) {\n    this.ConditionsStore = ConditionsStore;\n    this.data = toJS(data);\n\n    makeObservable(this, {\n      data: observable,\n      condition: computed,\n      type: computed,\n      setData: action,\n      setCondition: action,\n      setType: action,\n    });\n  }\n\n  setData = (data) => {\n    this.data = toJS(data);\n  }\n\n  setCondition = (condition) => {\n    this.data.condition = toJS(condition);\n  }\n\n  setType = () => {\n    if (this.type === system.EMAIL_СONDITION_BLACK) {\n      this.data.type = system.EMAIL_СONDITION_WHITE;\n    } else {\n      this.data.type = system.EMAIL_СONDITION_BLACK;\n    }\n  }\n}\n\nexport default ConditionViewStore;\n","import ConditionEditStore from './edit';\nimport { system } from '../../../../../../enums';\n\nconst defaultCondition = {\n  condition: '',\n  type: system.EMAIL_СONDITION_WHITE,\n};\n\nclass ConditionCreateStore extends ConditionEditStore {\n  constructor({ ConditionsStore }) {\n    super({ ConditionsStore });\n\n    this.onOpen = this.onOpen.bind(this);\n  }\n\n  onOpen() {\n    super.onOpen(defaultCondition);\n  }\n\n  onSave = async() => {\n    const {\n      condition,\n      type,\n    } = this;\n\n    try {\n      await api('system/createEmailCondition')\n        .method('post')\n        .body({ \n          condition,\n          type,\n        });\n      \n      this.refresh();\n      this.onClose();\n    } catch {\n      notify({\n        variant: 'error',\n        message: 'Не удалось добавить условие'\n      });\n    }\n  }\n}\n\nexport default ConditionCreateStore;\n","import { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  IconButton,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Button,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport WhiteIcon from '@material-ui/icons/CheckOutlined';\nimport BlackIcon from '@material-ui/icons/CancelOutlined';\nimport { system } from '../../../../../enums';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    marginTop: '16px',\n  },\n  input: {\n    marginBottom: '8px'\n  },\n}));\n\nconst ConditionView = observer(({ ConditionStore }) => {\n  const classes = useStyles();\n\n  const {\n    id,\n    condition,\n    type,\n    setCondition,\n    setType,\n    open,\n    onClose,\n    onSave,\n  } = ConditionStore;\n\n  return (\n    <Dialog\n      scroll={'paper'}\n      fullWidth={true}\n      open={open}\n      onClose={onClose}\n    >\n      <DialogTitle>\n        {id ? `Редактирование условия #${id}` : 'Создание условия'}\n      </DialogTitle>\n\n      <DialogContent dividers={true}>\n        <TextField\n          className={classes.input}\n          label={'Условие'}\n          variant={'outlined'}\n          fullWidth={true}\n          value={condition}\n          onChange={(event) => setCondition(event.target.value)}\n        />\n\n        <FormControlLabel\n          value={'start'}\n          label={`Тип условия \"${type}\": `}\n          labelPlacement={'start'}\n          control={(\n            <Switch\n              color={'primary'}\n              checked={type === system.EMAIL_СONDITION_WHITE}\n              onChange={setType}\n            />\n          )}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          color={'primary'}\n          onClick={onClose}\n        >\n          Отмена\n        </Button>\n        <Button\n          color={'primary'}\n          onClick={onSave}\n        >\n          Сохранить\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n\nconst ConditionsView = observer(({\n  ConditionsStore,\n  ConditionEditStore,\n  ConditionCreateStore,\n}) => {\n  const classes = useStyles();\n\n  const {\n    conditions,\n    deleteCondition,\n  } = ConditionsStore;\n\n  return (\n    <Fragment>\n      <Typography\n        className={classes.title}\n        variant={'h5'}\n      >\n        Email условия\n\n        <IconButton\n          edge={'end'}\n          onClick={ConditionCreateStore.onOpen}\n        >\n          <AddIcon />\n        </IconButton>\n      </Typography>\n\n      <List>\n        {conditions.map((conditionData) => {\n          const { id, condition, type } = conditionData;\n\n          return (\n            <ListItem\n              key={id}\n              onClick={() => ConditionEditStore.onOpen(conditionData)}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {type === system.EMAIL_СONDITION_WHITE ? (\n                    <WhiteIcon />\n                  ) : (\n                    <BlackIcon />\n                  )}\n                </Avatar>\n              </ListItemAvatar>\n\n              <ListItemText primary={condition} />\n\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge={'end'}\n                  onClick={() => deleteCondition(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n\n      <ConditionView ConditionStore={ConditionEditStore} />\n      <ConditionView ConditionStore={ConditionCreateStore} />\n    </Fragment>\n  );\n});\n\nexport default ConditionsView;\n","import ConditionsStore from './store';\nimport ConditionEditStore from './condition/edit';\nimport ConditionCreateStore from './condition/create';\nimport View from './view';\n\nconst Conditions = () => {\n  const conditions = new ConditionsStore();\n  const conditionEdit = new ConditionEditStore({ ConditionsStore: conditions });\n  const conditionCreate = new ConditionCreateStore({ ConditionsStore: conditions });\n\n  return (\n    <View\n      ConditionsStore={conditions}\n      ConditionEditStore={conditionEdit}\n      ConditionCreateStore={conditionCreate}\n    />\n  );\n};\n\nexport default Conditions;\n","import { Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Paper,\n  Tabs,\n  Tab,\n  Box,\n} from '@material-ui/core';\nimport Accounts from './accounts';\nimport Conditions from './conditions';\n\nconst useStyles = makeStyles(() => ({\n  tabs: {\n    marginTop: '16px',\n  },\n}));\n\nconst Content = ({ tabIndex }) => {\n  switch (tabIndex) {\n    case 0:\n      return <Accounts />;\n\n    case 1:\n      return <Conditions />;\n    \n    default:\n      return null;\n  }\n};\n\nconst SystemView = observer(({ store }) => {\n  const classes = useStyles();\n\n  const {\n    tabIndex,\n    onTabIndexChange,\n  } = store;\n\n  return (\n    <Fragment>\n      <Typography variant={'h4'}>\n        Система\n      </Typography>\n\n      <Paper className={classes.tabs}>\n        <Tabs\n          centered={true}\n          textColor={'primary'}\n          indicatorColor={'primary'}\n          value={tabIndex}\n          onChange={onTabIndexChange}\n        >\n          <Tab label={'Email аккаунты'} />\n          <Tab label={'Email условия'} />\n        </Tabs>\n      </Paper>\n\n      <Box>\n        <Content tabIndex={tabIndex} />\n      </Box>\n    </Fragment>\n  );\n});\n\nexport default SystemView;\n","import Store from './store';\nimport View from './view';\n\nconst System = () => {\n  const store = new Store();\n\n  return <View store={store} />;\n};\n\nexport default System;\n","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tests  from './tests';\r\nimport Profile from './profile';\r\nimport Contacts from './contacts';\r\nimport Groups from './groups';\r\nimport Roles from './roles';\r\nimport Users from './users';\r\nimport System from './system';\r\nimport { objects } from '../../../enums';\r\nimport { checkPermissions } from '../../../utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pages: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n}));\r\n\r\nconst AppRouter = observer(({ AuthStore }) => {\r\n  const classes = useStyles();\r\n\r\n  const { permissions } = AuthStore;\r\n\r\n  return (\r\n    <main className={classes.pages}>\r\n      <div className={classes.toolbar} />\r\n\r\n      <Switch >\r\n        <Route path=\"/\" exact component={Tests} />\r\n        <Route path=\"/test/view/:link\" exact component={Tests} />\r\n        <Route path=\"/test/edit/:testId\" exact component={Tests} />\r\n        <Route path=\"/profile\" exact component={Profile} />\r\n        <Route path=\"/contacts\" exact component={Contacts} />\r\n        <Route path=\"/groups\" exact component={Groups} />\r\n\r\n        {checkPermissions(permissions, objects.ROLES) ? (\r\n          <Route path=\"/roles\" exact component={Roles} />\r\n        ) : null}\r\n        {checkPermissions(permissions, objects.USERS) ? (\r\n          <Route path=\"/users\" exact component={Users} />\r\n        ) : null}\r\n        {checkPermissions(permissions, objects.SYSTEM) ? (\r\n          <Route path=\"/system\" exact component={System} />\r\n        ) : null}\r\n\r\n        <Redirect to=\"/\" exact/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n});\r\n\r\nexport default inject(({ AuthStore }) => {\r\n  return {\r\n    AuthStore,\r\n  };\r\n})(AppRouter);\r\n","import React, { Fragment } from 'react';\r\nimport Aside from './aside';\r\nimport Pages from './pages';\r\n\r\nconst Body = () => {\r\n  return (\r\n    <Fragment>\r\n      <Aside />\r\n      <Pages />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from 'react';\r\nimport { inject } from 'mobx-react';\r\nimport {\r\n  CssBaseline,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Header from './header';\r\nimport Body from './body';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Header />\r\n\r\n      <Body />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default inject(\r\n  ({ AuthStore }) => {\r\n    return {\r\n      AuthStore\r\n    };\r\n  }\r\n)(App);\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'mobx-react';\n\nimport Api from './api';\nimport Notify from './notify';\nimport Auth from './auth';\n\nimport SearchStore from './search';\nimport App from '../app';\n\nconst Init = () => {\n  const search = new SearchStore();\n\n  return (\n    <Router>\n      <Api>\n        <Notify>\n          <Auth>\n            <Provider SearchStore={search}>\n              <App />\n            </Provider>\n          </Auth>\n        </Notify>\n      </Api>\n    </Router>\n  );\n};\n\nexport default Init;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Init from './init';\n\nReactDOM.render(<Init />, document.getElementById('root'));\n"],"sourceRoot":""}